# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = Scaffold
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/m4_ax_openmp.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
libscaffold_a_AR = $(AR) $(ARFLAGS)
libscaffold_a_LIBADD =
am_libscaffold_a_OBJECTS = libscaffold_a-ScaffoldVertex.$(OBJEXT) \
	libscaffold_a-ScaffoldEdge.$(OBJEXT) \
	libscaffold_a-ScaffoldGraph.$(OBJEXT) \
	libscaffold_a-ScaffoldVisitors.$(OBJEXT) \
	libscaffold_a-ScaffoldLink.$(OBJEXT) \
	libscaffold_a-ScaffoldRecord.$(OBJEXT) \
	libscaffold_a-ScaffoldGroup.$(OBJEXT) \
	libscaffold_a-ScaffoldSearch.$(OBJEXT) \
	libscaffold_a-ScaffoldWalk.$(OBJEXT) \
	libscaffold_a-ScaffoldAlgorithms.$(OBJEXT) \
	libscaffold_a-ScaffoldSequenceCollection.$(OBJEXT)
libscaffold_a_OBJECTS = $(am_libscaffold_a_OBJECTS)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libscaffold_a_SOURCES)
DIST_SOURCES = $(libscaffold_a_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_CXXFLAGS = @AM_CXXFLAGS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
noinst_LIBRARIES = libscaffold.a
libscaffold_a_CPPFLAGS = \
	-I$(top_srcdir)/Util \
    -I$(top_srcdir)/Thirdparty \
    -I$(top_srcdir)/Bigraph \
    -I$(top_srcdir)/SQG \
	-I$(top_srcdir)/Algorithm \
    -I$(top_srcdir)/StringGraph

libscaffold_a_SOURCES = ScaffoldVertex.h ScaffoldVertex.cpp \
                        ScaffoldEdge.h ScaffoldEdge.cpp \
                        ScaffoldGraph.h ScaffoldGraph.cpp \
                        ScaffoldVisitors.h ScaffoldVisitors.cpp \
                        ScaffoldLink.h ScaffoldLink.cpp \
                        ScaffoldRecord.h ScaffoldRecord.cpp \
						ScaffoldGroup.h ScaffoldGroup.cpp \
                        ScaffoldSearch.h ScaffoldSearch.cpp \
                        ScaffoldWalk.h ScaffoldWalk.cpp \
						ScaffoldAlgorithms.h ScaffoldAlgorithms.cpp \
						ScaffoldSequenceCollection.h ScaffoldSequenceCollection.cpp

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Scaffold/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Scaffold/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libscaffold.a: $(libscaffold_a_OBJECTS) $(libscaffold_a_DEPENDENCIES) 
	-rm -f libscaffold.a
	$(libscaffold_a_AR) libscaffold.a $(libscaffold_a_OBJECTS) $(libscaffold_a_LIBADD)
	$(RANLIB) libscaffold.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libscaffold_a-ScaffoldAlgorithms.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libscaffold_a-ScaffoldEdge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libscaffold_a-ScaffoldGraph.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libscaffold_a-ScaffoldGroup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libscaffold_a-ScaffoldLink.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libscaffold_a-ScaffoldRecord.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libscaffold_a-ScaffoldSearch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libscaffold_a-ScaffoldSequenceCollection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libscaffold_a-ScaffoldVertex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libscaffold_a-ScaffoldVisitors.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libscaffold_a-ScaffoldWalk.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libscaffold_a-ScaffoldVertex.o: ScaffoldVertex.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libscaffold_a-ScaffoldVertex.o -MD -MP -MF $(DEPDIR)/libscaffold_a-ScaffoldVertex.Tpo -c -o libscaffold_a-ScaffoldVertex.o `test -f 'ScaffoldVertex.cpp' || echo '$(srcdir)/'`ScaffoldVertex.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libscaffold_a-ScaffoldVertex.Tpo $(DEPDIR)/libscaffold_a-ScaffoldVertex.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScaffoldVertex.cpp' object='libscaffold_a-ScaffoldVertex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libscaffold_a-ScaffoldVertex.o `test -f 'ScaffoldVertex.cpp' || echo '$(srcdir)/'`ScaffoldVertex.cpp

libscaffold_a-ScaffoldVertex.obj: ScaffoldVertex.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libscaffold_a-ScaffoldVertex.obj -MD -MP -MF $(DEPDIR)/libscaffold_a-ScaffoldVertex.Tpo -c -o libscaffold_a-ScaffoldVertex.obj `if test -f 'ScaffoldVertex.cpp'; then $(CYGPATH_W) 'ScaffoldVertex.cpp'; else $(CYGPATH_W) '$(srcdir)/ScaffoldVertex.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libscaffold_a-ScaffoldVertex.Tpo $(DEPDIR)/libscaffold_a-ScaffoldVertex.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScaffoldVertex.cpp' object='libscaffold_a-ScaffoldVertex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libscaffold_a-ScaffoldVertex.obj `if test -f 'ScaffoldVertex.cpp'; then $(CYGPATH_W) 'ScaffoldVertex.cpp'; else $(CYGPATH_W) '$(srcdir)/ScaffoldVertex.cpp'; fi`

libscaffold_a-ScaffoldEdge.o: ScaffoldEdge.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libscaffold_a-ScaffoldEdge.o -MD -MP -MF $(DEPDIR)/libscaffold_a-ScaffoldEdge.Tpo -c -o libscaffold_a-ScaffoldEdge.o `test -f 'ScaffoldEdge.cpp' || echo '$(srcdir)/'`ScaffoldEdge.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libscaffold_a-ScaffoldEdge.Tpo $(DEPDIR)/libscaffold_a-ScaffoldEdge.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScaffoldEdge.cpp' object='libscaffold_a-ScaffoldEdge.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libscaffold_a-ScaffoldEdge.o `test -f 'ScaffoldEdge.cpp' || echo '$(srcdir)/'`ScaffoldEdge.cpp

libscaffold_a-ScaffoldEdge.obj: ScaffoldEdge.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libscaffold_a-ScaffoldEdge.obj -MD -MP -MF $(DEPDIR)/libscaffold_a-ScaffoldEdge.Tpo -c -o libscaffold_a-ScaffoldEdge.obj `if test -f 'ScaffoldEdge.cpp'; then $(CYGPATH_W) 'ScaffoldEdge.cpp'; else $(CYGPATH_W) '$(srcdir)/ScaffoldEdge.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libscaffold_a-ScaffoldEdge.Tpo $(DEPDIR)/libscaffold_a-ScaffoldEdge.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScaffoldEdge.cpp' object='libscaffold_a-ScaffoldEdge.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libscaffold_a-ScaffoldEdge.obj `if test -f 'ScaffoldEdge.cpp'; then $(CYGPATH_W) 'ScaffoldEdge.cpp'; else $(CYGPATH_W) '$(srcdir)/ScaffoldEdge.cpp'; fi`

libscaffold_a-ScaffoldGraph.o: ScaffoldGraph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libscaffold_a-ScaffoldGraph.o -MD -MP -MF $(DEPDIR)/libscaffold_a-ScaffoldGraph.Tpo -c -o libscaffold_a-ScaffoldGraph.o `test -f 'ScaffoldGraph.cpp' || echo '$(srcdir)/'`ScaffoldGraph.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libscaffold_a-ScaffoldGraph.Tpo $(DEPDIR)/libscaffold_a-ScaffoldGraph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScaffoldGraph.cpp' object='libscaffold_a-ScaffoldGraph.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libscaffold_a-ScaffoldGraph.o `test -f 'ScaffoldGraph.cpp' || echo '$(srcdir)/'`ScaffoldGraph.cpp

libscaffold_a-ScaffoldGraph.obj: ScaffoldGraph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libscaffold_a-ScaffoldGraph.obj -MD -MP -MF $(DEPDIR)/libscaffold_a-ScaffoldGraph.Tpo -c -o libscaffold_a-ScaffoldGraph.obj `if test -f 'ScaffoldGraph.cpp'; then $(CYGPATH_W) 'ScaffoldGraph.cpp'; else $(CYGPATH_W) '$(srcdir)/ScaffoldGraph.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libscaffold_a-ScaffoldGraph.Tpo $(DEPDIR)/libscaffold_a-ScaffoldGraph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScaffoldGraph.cpp' object='libscaffold_a-ScaffoldGraph.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libscaffold_a-ScaffoldGraph.obj `if test -f 'ScaffoldGraph.cpp'; then $(CYGPATH_W) 'ScaffoldGraph.cpp'; else $(CYGPATH_W) '$(srcdir)/ScaffoldGraph.cpp'; fi`

libscaffold_a-ScaffoldVisitors.o: ScaffoldVisitors.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libscaffold_a-ScaffoldVisitors.o -MD -MP -MF $(DEPDIR)/libscaffold_a-ScaffoldVisitors.Tpo -c -o libscaffold_a-ScaffoldVisitors.o `test -f 'ScaffoldVisitors.cpp' || echo '$(srcdir)/'`ScaffoldVisitors.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libscaffold_a-ScaffoldVisitors.Tpo $(DEPDIR)/libscaffold_a-ScaffoldVisitors.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScaffoldVisitors.cpp' object='libscaffold_a-ScaffoldVisitors.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libscaffold_a-ScaffoldVisitors.o `test -f 'ScaffoldVisitors.cpp' || echo '$(srcdir)/'`ScaffoldVisitors.cpp

libscaffold_a-ScaffoldVisitors.obj: ScaffoldVisitors.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libscaffold_a-ScaffoldVisitors.obj -MD -MP -MF $(DEPDIR)/libscaffold_a-ScaffoldVisitors.Tpo -c -o libscaffold_a-ScaffoldVisitors.obj `if test -f 'ScaffoldVisitors.cpp'; then $(CYGPATH_W) 'ScaffoldVisitors.cpp'; else $(CYGPATH_W) '$(srcdir)/ScaffoldVisitors.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libscaffold_a-ScaffoldVisitors.Tpo $(DEPDIR)/libscaffold_a-ScaffoldVisitors.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScaffoldVisitors.cpp' object='libscaffold_a-ScaffoldVisitors.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libscaffold_a-ScaffoldVisitors.obj `if test -f 'ScaffoldVisitors.cpp'; then $(CYGPATH_W) 'ScaffoldVisitors.cpp'; else $(CYGPATH_W) '$(srcdir)/ScaffoldVisitors.cpp'; fi`

libscaffold_a-ScaffoldLink.o: ScaffoldLink.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libscaffold_a-ScaffoldLink.o -MD -MP -MF $(DEPDIR)/libscaffold_a-ScaffoldLink.Tpo -c -o libscaffold_a-ScaffoldLink.o `test -f 'ScaffoldLink.cpp' || echo '$(srcdir)/'`ScaffoldLink.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libscaffold_a-ScaffoldLink.Tpo $(DEPDIR)/libscaffold_a-ScaffoldLink.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScaffoldLink.cpp' object='libscaffold_a-ScaffoldLink.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libscaffold_a-ScaffoldLink.o `test -f 'ScaffoldLink.cpp' || echo '$(srcdir)/'`ScaffoldLink.cpp

libscaffold_a-ScaffoldLink.obj: ScaffoldLink.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libscaffold_a-ScaffoldLink.obj -MD -MP -MF $(DEPDIR)/libscaffold_a-ScaffoldLink.Tpo -c -o libscaffold_a-ScaffoldLink.obj `if test -f 'ScaffoldLink.cpp'; then $(CYGPATH_W) 'ScaffoldLink.cpp'; else $(CYGPATH_W) '$(srcdir)/ScaffoldLink.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libscaffold_a-ScaffoldLink.Tpo $(DEPDIR)/libscaffold_a-ScaffoldLink.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScaffoldLink.cpp' object='libscaffold_a-ScaffoldLink.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libscaffold_a-ScaffoldLink.obj `if test -f 'ScaffoldLink.cpp'; then $(CYGPATH_W) 'ScaffoldLink.cpp'; else $(CYGPATH_W) '$(srcdir)/ScaffoldLink.cpp'; fi`

libscaffold_a-ScaffoldRecord.o: ScaffoldRecord.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libscaffold_a-ScaffoldRecord.o -MD -MP -MF $(DEPDIR)/libscaffold_a-ScaffoldRecord.Tpo -c -o libscaffold_a-ScaffoldRecord.o `test -f 'ScaffoldRecord.cpp' || echo '$(srcdir)/'`ScaffoldRecord.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libscaffold_a-ScaffoldRecord.Tpo $(DEPDIR)/libscaffold_a-ScaffoldRecord.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScaffoldRecord.cpp' object='libscaffold_a-ScaffoldRecord.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libscaffold_a-ScaffoldRecord.o `test -f 'ScaffoldRecord.cpp' || echo '$(srcdir)/'`ScaffoldRecord.cpp

libscaffold_a-ScaffoldRecord.obj: ScaffoldRecord.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libscaffold_a-ScaffoldRecord.obj -MD -MP -MF $(DEPDIR)/libscaffold_a-ScaffoldRecord.Tpo -c -o libscaffold_a-ScaffoldRecord.obj `if test -f 'ScaffoldRecord.cpp'; then $(CYGPATH_W) 'ScaffoldRecord.cpp'; else $(CYGPATH_W) '$(srcdir)/ScaffoldRecord.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libscaffold_a-ScaffoldRecord.Tpo $(DEPDIR)/libscaffold_a-ScaffoldRecord.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScaffoldRecord.cpp' object='libscaffold_a-ScaffoldRecord.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libscaffold_a-ScaffoldRecord.obj `if test -f 'ScaffoldRecord.cpp'; then $(CYGPATH_W) 'ScaffoldRecord.cpp'; else $(CYGPATH_W) '$(srcdir)/ScaffoldRecord.cpp'; fi`

libscaffold_a-ScaffoldGroup.o: ScaffoldGroup.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libscaffold_a-ScaffoldGroup.o -MD -MP -MF $(DEPDIR)/libscaffold_a-ScaffoldGroup.Tpo -c -o libscaffold_a-ScaffoldGroup.o `test -f 'ScaffoldGroup.cpp' || echo '$(srcdir)/'`ScaffoldGroup.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libscaffold_a-ScaffoldGroup.Tpo $(DEPDIR)/libscaffold_a-ScaffoldGroup.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScaffoldGroup.cpp' object='libscaffold_a-ScaffoldGroup.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libscaffold_a-ScaffoldGroup.o `test -f 'ScaffoldGroup.cpp' || echo '$(srcdir)/'`ScaffoldGroup.cpp

libscaffold_a-ScaffoldGroup.obj: ScaffoldGroup.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libscaffold_a-ScaffoldGroup.obj -MD -MP -MF $(DEPDIR)/libscaffold_a-ScaffoldGroup.Tpo -c -o libscaffold_a-ScaffoldGroup.obj `if test -f 'ScaffoldGroup.cpp'; then $(CYGPATH_W) 'ScaffoldGroup.cpp'; else $(CYGPATH_W) '$(srcdir)/ScaffoldGroup.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libscaffold_a-ScaffoldGroup.Tpo $(DEPDIR)/libscaffold_a-ScaffoldGroup.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScaffoldGroup.cpp' object='libscaffold_a-ScaffoldGroup.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libscaffold_a-ScaffoldGroup.obj `if test -f 'ScaffoldGroup.cpp'; then $(CYGPATH_W) 'ScaffoldGroup.cpp'; else $(CYGPATH_W) '$(srcdir)/ScaffoldGroup.cpp'; fi`

libscaffold_a-ScaffoldSearch.o: ScaffoldSearch.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libscaffold_a-ScaffoldSearch.o -MD -MP -MF $(DEPDIR)/libscaffold_a-ScaffoldSearch.Tpo -c -o libscaffold_a-ScaffoldSearch.o `test -f 'ScaffoldSearch.cpp' || echo '$(srcdir)/'`ScaffoldSearch.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libscaffold_a-ScaffoldSearch.Tpo $(DEPDIR)/libscaffold_a-ScaffoldSearch.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScaffoldSearch.cpp' object='libscaffold_a-ScaffoldSearch.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libscaffold_a-ScaffoldSearch.o `test -f 'ScaffoldSearch.cpp' || echo '$(srcdir)/'`ScaffoldSearch.cpp

libscaffold_a-ScaffoldSearch.obj: ScaffoldSearch.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libscaffold_a-ScaffoldSearch.obj -MD -MP -MF $(DEPDIR)/libscaffold_a-ScaffoldSearch.Tpo -c -o libscaffold_a-ScaffoldSearch.obj `if test -f 'ScaffoldSearch.cpp'; then $(CYGPATH_W) 'ScaffoldSearch.cpp'; else $(CYGPATH_W) '$(srcdir)/ScaffoldSearch.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libscaffold_a-ScaffoldSearch.Tpo $(DEPDIR)/libscaffold_a-ScaffoldSearch.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScaffoldSearch.cpp' object='libscaffold_a-ScaffoldSearch.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libscaffold_a-ScaffoldSearch.obj `if test -f 'ScaffoldSearch.cpp'; then $(CYGPATH_W) 'ScaffoldSearch.cpp'; else $(CYGPATH_W) '$(srcdir)/ScaffoldSearch.cpp'; fi`

libscaffold_a-ScaffoldWalk.o: ScaffoldWalk.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libscaffold_a-ScaffoldWalk.o -MD -MP -MF $(DEPDIR)/libscaffold_a-ScaffoldWalk.Tpo -c -o libscaffold_a-ScaffoldWalk.o `test -f 'ScaffoldWalk.cpp' || echo '$(srcdir)/'`ScaffoldWalk.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libscaffold_a-ScaffoldWalk.Tpo $(DEPDIR)/libscaffold_a-ScaffoldWalk.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScaffoldWalk.cpp' object='libscaffold_a-ScaffoldWalk.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libscaffold_a-ScaffoldWalk.o `test -f 'ScaffoldWalk.cpp' || echo '$(srcdir)/'`ScaffoldWalk.cpp

libscaffold_a-ScaffoldWalk.obj: ScaffoldWalk.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libscaffold_a-ScaffoldWalk.obj -MD -MP -MF $(DEPDIR)/libscaffold_a-ScaffoldWalk.Tpo -c -o libscaffold_a-ScaffoldWalk.obj `if test -f 'ScaffoldWalk.cpp'; then $(CYGPATH_W) 'ScaffoldWalk.cpp'; else $(CYGPATH_W) '$(srcdir)/ScaffoldWalk.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libscaffold_a-ScaffoldWalk.Tpo $(DEPDIR)/libscaffold_a-ScaffoldWalk.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScaffoldWalk.cpp' object='libscaffold_a-ScaffoldWalk.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libscaffold_a-ScaffoldWalk.obj `if test -f 'ScaffoldWalk.cpp'; then $(CYGPATH_W) 'ScaffoldWalk.cpp'; else $(CYGPATH_W) '$(srcdir)/ScaffoldWalk.cpp'; fi`

libscaffold_a-ScaffoldAlgorithms.o: ScaffoldAlgorithms.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libscaffold_a-ScaffoldAlgorithms.o -MD -MP -MF $(DEPDIR)/libscaffold_a-ScaffoldAlgorithms.Tpo -c -o libscaffold_a-ScaffoldAlgorithms.o `test -f 'ScaffoldAlgorithms.cpp' || echo '$(srcdir)/'`ScaffoldAlgorithms.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libscaffold_a-ScaffoldAlgorithms.Tpo $(DEPDIR)/libscaffold_a-ScaffoldAlgorithms.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScaffoldAlgorithms.cpp' object='libscaffold_a-ScaffoldAlgorithms.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libscaffold_a-ScaffoldAlgorithms.o `test -f 'ScaffoldAlgorithms.cpp' || echo '$(srcdir)/'`ScaffoldAlgorithms.cpp

libscaffold_a-ScaffoldAlgorithms.obj: ScaffoldAlgorithms.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libscaffold_a-ScaffoldAlgorithms.obj -MD -MP -MF $(DEPDIR)/libscaffold_a-ScaffoldAlgorithms.Tpo -c -o libscaffold_a-ScaffoldAlgorithms.obj `if test -f 'ScaffoldAlgorithms.cpp'; then $(CYGPATH_W) 'ScaffoldAlgorithms.cpp'; else $(CYGPATH_W) '$(srcdir)/ScaffoldAlgorithms.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libscaffold_a-ScaffoldAlgorithms.Tpo $(DEPDIR)/libscaffold_a-ScaffoldAlgorithms.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScaffoldAlgorithms.cpp' object='libscaffold_a-ScaffoldAlgorithms.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libscaffold_a-ScaffoldAlgorithms.obj `if test -f 'ScaffoldAlgorithms.cpp'; then $(CYGPATH_W) 'ScaffoldAlgorithms.cpp'; else $(CYGPATH_W) '$(srcdir)/ScaffoldAlgorithms.cpp'; fi`

libscaffold_a-ScaffoldSequenceCollection.o: ScaffoldSequenceCollection.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libscaffold_a-ScaffoldSequenceCollection.o -MD -MP -MF $(DEPDIR)/libscaffold_a-ScaffoldSequenceCollection.Tpo -c -o libscaffold_a-ScaffoldSequenceCollection.o `test -f 'ScaffoldSequenceCollection.cpp' || echo '$(srcdir)/'`ScaffoldSequenceCollection.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libscaffold_a-ScaffoldSequenceCollection.Tpo $(DEPDIR)/libscaffold_a-ScaffoldSequenceCollection.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScaffoldSequenceCollection.cpp' object='libscaffold_a-ScaffoldSequenceCollection.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libscaffold_a-ScaffoldSequenceCollection.o `test -f 'ScaffoldSequenceCollection.cpp' || echo '$(srcdir)/'`ScaffoldSequenceCollection.cpp

libscaffold_a-ScaffoldSequenceCollection.obj: ScaffoldSequenceCollection.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libscaffold_a-ScaffoldSequenceCollection.obj -MD -MP -MF $(DEPDIR)/libscaffold_a-ScaffoldSequenceCollection.Tpo -c -o libscaffold_a-ScaffoldSequenceCollection.obj `if test -f 'ScaffoldSequenceCollection.cpp'; then $(CYGPATH_W) 'ScaffoldSequenceCollection.cpp'; else $(CYGPATH_W) '$(srcdir)/ScaffoldSequenceCollection.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libscaffold_a-ScaffoldSequenceCollection.Tpo $(DEPDIR)/libscaffold_a-ScaffoldSequenceCollection.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ScaffoldSequenceCollection.cpp' object='libscaffold_a-ScaffoldSequenceCollection.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libscaffold_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libscaffold_a-ScaffoldSequenceCollection.obj `if test -f 'ScaffoldSequenceCollection.cpp'; then $(CYGPATH_W) 'ScaffoldSequenceCollection.cpp'; else $(CYGPATH_W) '$(srcdir)/ScaffoldSequenceCollection.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
